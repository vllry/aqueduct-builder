#!/usr/bin/python3

from threading import Thread
import json
from sys import exit
from os import getuid
from platform import dist
from bottle import route, run, request#, static_file
import libaqueductbuilder as builder



conf = builder.conf



@route('/', method='GET')
def get_info():
	info = {
		'service' : 'aqueduct-builder',
		'name' : conf['name'],
		'version' : conf['version'],
		'arch' : conf['arch']
		}
	return json.dumps(info)



@route('/build/submit', method='POST')
def build_submit():
	upload = request.files.data
	callbackurl = request.forms.get('callbackurl')
	os = request.forms.get('os')
	release = request.forms.get('release')

	if not upload or not upload.file:
		return {'success': False, 'message': 'No file supplied'}
	elif not callbackurl:
		return {'success': False, 'message': 'No callbackurl supplied'}
	elif callbackurl.find('%url') == -1:
		return {'success': False, 'message': 'callbackurl must contain %url'}

	upload.save(conf['dir']['intake'])
	buildid = builder.db_new_build_id(os, release, upload.filename)
	path_to_source = conf['dir']['intake'] + upload.filename
	t = Thread(target=builder.pkg_build, args=(buildid, os,release,path_to_source,))
	t.start()

	return {
			'success': True,
			'message': 'Job successfully submitted',
			'id': buildid
			}



@route('/build/<build_id>/log')
def build_log(build_id):
	return "not implimented yet"



@route('/build/<build_id>/result')
def build_result(build_id):
	return "not implimented yet"



if getuid() != 0:
	print('Please run aqueduct-builder as root')
	exit(1)
run(host='', port=conf['port'], debug=True)
